# interfaz.py

import pygame
import sys
from config import personajes, armas, locaciones
from motor_juego import iniciar_juego, investigar_lugar, verificar_acusacion

# ----------------------------
# 1) Diccionario de finales
# ----------------------------
finales_posibles = {
    ("Jonas", "Rev√≥lver", "La cueva"): {
        "titulo": "El ciclo contin√∫a",
        "descripcion": (
            "Has descubierto al culpable, el arma y el lugar‚Ä¶ pero todo esto ya hab√≠a ocurrido antes.\n"
            "En un rinc√≥n del b√∫nker, encuentras un diario que describe con exactitud cada paso que tomaste.\n"
            "El asesino no actu√≥ por voluntad, sino porque el tiempo as√≠ lo quiso.\n"
            "Cuando cierras los ojos, una nueva partida empieza‚Ä¶ el ciclo no se ha roto."
        )
    },
    ("Martha", "Cuerda", "El b√∫nker"): {
        "titulo": "El origen del mal",
        "descripcion": (
            "Logras unir las piezas. El asesino era alguien que viaj√≥ entre √©pocas, influenciado por El Origen.\n"
            "Has eliminado la causa que dio inicio al bucle temporal en Winden.\n"
            "Por primera vez, todo est√° en calma. Pero un ni√±o en 1953 observa el cielo, curioso‚Ä¶\n"
            "el ciclo puede empezar otra vez."
        )
    },
    ("Claudia", "Estatuilla", "La planta nuclear"): {
        "titulo": "El impostor",
        "descripcion": (
            "Todo parece claro. El arma, el lugar, el culpable‚Ä¶\n"
            "Pero cuando confrontas al asesino, te das cuenta de algo terrible:\n"
            "¬°T√∫ mismo eres el asesino! Has estado viajando en el tiempo intentando borrar tu culpa.\n"
            "No lo recuerdas‚Ä¶ porque a√∫n no lo has hecho."
        )
    },
    ("Noah", "Tijeras", "Casa de los Doppler"): {
        "titulo": "El apocalipsis",
        "descripcion": (
            "Has encontrado al culpable, pero es demasiado tarde.\n"
            "El arma era parte de una m√°quina: un catalizador temporal.\n"
            "Cuando detonas el dispositivo, los relojes se detienen. Afuera, todo comienza a desintegrarse.\n"
            "Has resuelto el crimen, pero sellado el destino del mundo."
        )
    },
    ("Ulrich", "Jeringa con veneno", "La iglesia"): {
        "titulo": "El mundo intermedio",
        "descripcion": (
            "Despu√©s de resolver el caso, una puerta se abre frente a ti.\n"
            "Entras, y ves todas las posibles realidades superpuestas.\n"
            "Tomas una decisi√≥n: borrar todos los mundos para evitar el sufrimiento.\n"
            "Nadie recuerda nada. Pero una voz susurra: 'Todo est√° conectado.'"
        )
    }
}

# ----------------------------
# 2) Inicializar Pygame
# ----------------------------
pygame.init()
ANCHO, ALTO = 800, 1000                                    # ‚Üê Tama√±o de la ventana
ventana = pygame.display.set_mode((ANCHO, ALTO))
pygame.display.set_caption("CLUE: DARK - Winden")

# Colores
BLANCO       = (255, 255, 255)
NEGRO        = (  0,   0,   0)
GRIS_OSCURO  = ( 30,  30,  30)
AZUL         = ( 70, 130, 180)
AZUL_CLARO   = (135, 206, 250)
ROJO         = (180,  50,  50)
ROJO_CLARO   = (210,  80,  80)

# Fuentes
fuente_titulo = pygame.font.SysFont("arial", 52, bold=True)  # ‚Üê Tama√±o del texto de t√≠tulo
fuente_sub    = pygame.font.SysFont("arial", 24)            # ‚Üê Tama√±o del texto secundario
fuente_btn    = pygame.font.SysFont("impact", 30)            # ‚Üê Tama√±o del texto en botones
fuente_texto  = pygame.font.SysFont("arial", 24)            # ‚Üê Tama√±o del texto de pistas

# ----------------------------
# 3) Funci√≥n de bot√≥n
# ----------------------------
def boton(texto, rect, col_norm, col_hover, mouse, clic, fuente=fuente_btn):
    x, y, w, h = rect
    # rect = (x, y, w, h): Defines posici√≥n y tama√±o del bot√≥n
    over = pygame.Rect(rect).collidepoint(mouse)
    color = col_hover if over else col_norm
    pygame.draw.rect(ventana, color, rect, border_radius=12)
    surf = fuente.render(texto, True, BLANCO)
    ventana.blit(surf, surf.get_rect(center=(x + w//2, y + h//2)))  # ‚Üê Centrado dentro del rect
    return over and clic[0]

# ----------------------------
# 4) Pantalla de Inicio
# ----------------------------
def pantalla_inicio():
    bg = pygame.image.load("Multi/Fondo_1.jpg").convert()
    bg = pygame.transform.scale(bg, (ANCHO, ALTO))  # ‚Üê Escalar fondo al tama√±o de ventana

    clock = pygame.time.Clock()
    while True:
        mouse = pygame.mouse.get_pos()
        clic  = pygame.mouse.get_pressed()
        for e in pygame.event.get():
            if e.type == pygame.QUIT:
                pygame.quit(); sys.exit()

        ventana.blit(bg, (0, 0))  # ‚Üê Posici√≥n (0,0) para cubrir toda la ventana
        tit = fuente_titulo.render("üåÄ CLUE: DARK - Winden", True, BLANCO)
        #ventana.blit(tit, (ANCHO//2 - tit.get_width()//2, 100))  # ‚Üê Centrar horizontal, y=100

        # Botones con rect = (x, y, ancho, alto)
        if boton("Iniciar Juego", (ANCHO//2 - 150, 300, 300, 60), AZUL, AZUL_CLARO, mouse, clic):
            return "iniciar"
        if boton("Salir",           (ANCHO//2 - 150, 400, 300, 60), ROJO, ROJO_CLARO, mouse, clic):
            pygame.quit(); sys.exit()

        pygame.display.flip()
        clock.tick(60)

# ----------------------------
# 5) Pantalla de Misi√≥n
# ----------------------------
def pantalla_mision(crimen_real):
    # Cargar y escalar fondo
    bg = pygame.image.load("Multi/Fondo_2.jpg").convert()
    bg = pygame.transform.scale(bg, (ANCHO, ALTO))

    clock = pygame.time.Clock()
    intro  = crimen_real["intro"]
    mision = "Tu misi√≥n: descubrir culpable, arma y lugar correcto."

    # Botones de locaciones (no cambian)
    botones = []
    margen_y, sep = 300, 80
    for i, loc in enumerate(locaciones[:3]):
        botones.append((loc["nombre"], (50, margen_y + i*sep, 350, 60)))
    for i, loc in enumerate(locaciones[3:]):
        botones.append((loc["nombre"], (ANCHO - 400, margen_y + i*sep, 350, 60)))

    # Bot√≥n ‚ÄúInvestigar‚Äù y ‚ÄúSalir del juego‚Äù
    rect_investigar = (ANCHO//2 - 100, ALTO - 160, 200, 50)
    rect_salir     = (ANCHO//2 - 150, ALTO - 100,  300, 60)

    pista = ""
    while True:
        mouse = pygame.mouse.get_pos()
        clic  = pygame.mouse.get_pressed()
        for e in pygame.event.get():
            if e.type == pygame.QUIT:
                pygame.quit(); sys.exit()

        ventana.blit(bg, (0, 0))

        # T√≠tulos y descripci√≥n
        ventana.blit(fuente_titulo.render("Misi√≥n en Winden", True, BLANCO),
                     (ANCHO//2 - 200, 5))
        ventana.blit(fuente_sub.render(intro, True, BLANCO),
                     (50, 160))
        ventana.blit(fuente_sub.render(mision, True, BLANCO),
                     (50, 190))

        # Botones de locaciones
        for nombre, rect in botones:
            if boton(nombre, rect, AZUL, AZUL_CLARO, mouse, clic):
                pista = investigar_lugar(nombre)

        # Bot√≥n Investigar
        if boton("Acusar", rect_investigar, AZUL, AZUL_CLARO, mouse, clic):
            return "acusar"


        # Bot√≥n Salir del juego
        if boton("Salir del juego", rect_salir, ROJO, ROJO_CLARO, mouse, clic):
            pygame.quit(); sys.exit()

        # Mostrar pista
        if pista:
            for idx, line in enumerate(pista.split("\n")):
                ventana.blit(fuente_texto.render(line, True, BLANCO),
                             (50, ALTO - 350 + idx*30))

        pygame.display.flip()
        clock.tick(60)

# ----------------------------
# 6) Selecci√≥n gen√©rica (Sospechoso / Arma / Lugar)
# ----------------------------
def pantalla_seleccionar(items, title):
    clock = pygame.time.Clock()
    botones = []
    mx, my = 50, 120                                       # ‚Üê margen inicial para selecci√≥n
    for idx, item in enumerate(items):
        x = mx + (idx % 2)*370                             # ‚Üê dos columnas
        y = my + (idx//2)*100                              # ‚Üê separaci√≥n vertical
        botones.append((item["nombre"], (x, y, 340, 60)))  # ‚Üê tama√±o de bot√≥n

    while True:
        mouse = pygame.mouse.get_pos()
        clic  = pygame.mouse.get_pressed()
        for e in pygame.event.get():
            if e.type == pygame.QUIT:
                pygame.quit(); sys.exit()

        ventana.fill(GRIS_OSCURO)
        header = fuente_titulo.render(title, True, BLANCO)
        ventana.blit(header, (ANCHO//2 - header.get_width()//2, 20))  # ‚Üê header centrado

        for nombre, rect in botones:
            if boton(nombre, rect, AZUL, AZUL_CLARO, mouse, clic):
                return nombre

        pygame.display.flip()
        clock.tick(60)

# ----------------------------
# 7) Pantalla de Acusaci√≥n y Resultado
# ----------------------------
def pantalla_acusacion(crimen_real):
    # 1) Selecci√≥n de sospechoso
    culp = pantalla_seleccionar(personajes, "Selecciona Sospechoso")
    
    # 2) Selecci√≥n de arma
    arma = pantalla_seleccionar(armas, "Selecciona Arma")
    
    # 3) Selecci√≥n de lugar
    lugar = pantalla_seleccionar(locaciones, "Selecciona Lugar")

    # 4) Validaci√≥n de las tres elecciones
    correcto = verificar_acusacion(
        crimen_real,
        {"asesino": culp, "arma": arma, "lugar": lugar}
    )
        
    ventana.fill(GRIS_OSCURO)
    if correcto:
        clave = (culp, arma, lugar)
        final = finales_posibles.get(clave)
        if final:
            # Final especial
            titulo = fuente_titulo.render(final["titulo"], True, AZUL_CLARO)
            ventana.blit(titulo, (ANCHO//2 - titulo.get_width()//2, 200))
            for i, line in enumerate(final["descripcion"].split("\n")):
                ventana.blit(
                    fuente_texto.render(line, True, BLANCO),
                    (50, 280 + i*30)
                )
        else:
            # Final gen√©rico de victoria
            msg = fuente_titulo.render("üéâ ¬°Has resuelto el caso!", True, AZUL_CLARO)
            ventana.blit(msg, (ANCHO//2 - msg.get_width()//2, ALTO//2 - 20))
    else:
        # Error en la acusaci√≥n
        msg = fuente_titulo.render("‚ùå Acusaci√≥n incorrecta...", True, ROJO_CLARO)
        ventana.blit(msg, (ANCHO//2 - msg.get_width()//2, ALTO//2 - 20))
        # Mostrar la combinaci√≥n real
        real = crimen_real
        detalle = (
            f"Real: {real['culpable']['nombre']}  /  "
            f"{real['arma']['nombre']}  /  "
            f"{real['lugar']['nombre']}"
        )
        ventana.blit(
            fuente_sub.render(detalle, True, BLANCO),
            (ANCHO//2 - fuente_sub.size(detalle)[0]//2, ALTO//2 + 40)
        )
    
    pygame.display.flip()
    pygame.time.wait(4000)

# ----------------------------
# 8) Flujo principal
# ----------------------------
if __name__ == "__main__":
    while True:
        accion = pantalla_inicio()
        if accion == "iniciar":
            crimen = iniciar_juego()
            pantalla_mision(crimen)
            pantalla_acusacion(crimen)
        else:
            break